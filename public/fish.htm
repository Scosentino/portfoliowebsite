<HTML>
<HEAD>
<TITLE>The Fish House of Key Largo: Common Eating Fish of Florida...</TITLE>
</HEAD>
<BODY bgcolor=ffffff bgsound src="mermaid.mid" loop=infinite>

<center>
<table border=1 width=610 bgcolor=ffbbc8 cellpadding=10><tr><td>




<div id="dot0" style="position: absolute; visibility: hidden; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot1" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot2" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot3" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot4" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot5" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="16">
</div>
<div id="dot6" style="position: absolute; height: 16; width: 24;">
	<img src="goldfish.gif" width="24" height="14">
</div>

<script LANGUAGE="JavaScript">
<!-- hide code

/*
Elastic Trail script (By Philip Winston @ pwinston@yahoo.com, URL: http://www.geocities.com/pwinston/)
Script featured on Dynamicdrive.com
For this and 100's more DHTML scripts, visit http://dynamicdrive.com
*/

var nDots = 7;

var Xpos = 0;
var Ypos = 0;

  // fixed time step, no relation to real time
var DELTAT = .01;
  // size of one spring in pixels
var SEGLEN = 10;
  // spring constant, stiffness of springs
var SPRINGK = 10;
  // all the physics is bogus, just picked stuff to
  // make it look okay
var MASS = 1;
// Positive XGRAVITY pulls right, negative pulls left
// Positive YGRAVITY pulls down, negative up
var XGRAVITY = 0;
var YGRAVITY = 50;
// RESISTANCE determines a slowing force proportional to velocity
var RESISTANCE = 10;
  // stopping criterea to prevent endless jittering
  // doesn't work when sitting on bottom since floor
  // doesn't push back so acceleration always as big
  // as gravity
var STOPVEL = 0.1;
var STOPACC = 0.1;
var DOTSIZE = 10;
  // BOUNCE is percent of velocity retained when 
  // bouncing off a wall
var BOUNCE = 0.75;

var isNetscape = navigator.appName=="Netscape";

  // always on for now, could be played with to
  // let dots fall to botton, get thrown, etc.
var followmouse = true;

var dots = new Array();
init();

function init()
{
    var i = 0;
    for (i = 0; i < nDots; i++) {
        dots[i] = new dot(i);
    }
    
    if (!isNetscape) {
        // I only know how to read the locations of the 
        // <LI> items in IE
        //skip this for now
        // setInitPositions(dots)
    }
    
    // set their positions
    for (i = 0; i < nDots; i++) {
        dots[i].obj.left = dots[i].X;
        dots[i].obj.top = dots[i].Y;
    }
    
    
    if (isNetscape) {
        // start right away since they are positioned
        // at 0, 0
        startanimate();
    } else {
        // let dots sit there for a few seconds
        // since they're hiding on the real bullets
        setTimeout("startanimate()", 1000);
    }
}



function dot(i) 
{
    this.X = Xpos;
    this.Y = Ypos;
    this.dx = 0;
    this.dy = 0;
    if (isNetscape) {	
        this.obj = eval("document.dot" + i);
    } else {
        this.obj = eval("dot" + i + ".style");
    }
}


function startanimate() {	
    setInterval("animate()", 20);
}


// This is to line up the bullets with actual LI tags on the page
// Had to add -DOTSIZE to X and 2*DOTSIZE to Y for IE 5, not sure why
// Still doesn't work great
function setInitPositions(dots)
{
    // initialize dot positions to be on top 
    // of the bullets in the <ul>
    var startloc = document.all.tags("LI");
    var i = 0;
    for (i = 0; i < startloc.length && i < (nDots - 1); i++) {
        dots[i+1].X = startloc[i].offsetLeft
            startloc[i].offsetParent.offsetLeft - DOTSIZE;
        dots[i+1].Y = startloc[i].offsetTop +
            startloc[i].offsetParent.offsetTop + 2*DOTSIZE;
    }
    // put 0th dot above 1st (it is hidden)
    dots[0].X = dots[1].X;
    dots[0].Y = dots[1].Y - SEGLEN;
}

// just save mouse position for animate() to use
function MoveHandler(e)
{
    Xpos = e.pageX;
    Ypos = e.pageY;	  
    return true;
}

// just save mouse position for animate() to use
function MoveHandlerIE() {
    Xpos = window.event.x + document.body.scrollLeft;
    Ypos = window.event.y + document.body.scrollTop;	  
}

if (isNetscape) {
    document.captureEvents(Event.MOUSEMOVE);
    document.onMouseMove = MoveHandler;
} else {
    document.onmousemove = MoveHandlerIE;
}


function vec(X, Y)
{
    this.X = X;
    this.Y = Y;
}

// adds force in X and Y to spring for dot[i] on dot[j]
function springForce(i, j, spring)
{
    var dx = (dots[i].X - dots[j].X);
    var dy = (dots[i].Y - dots[j].Y);
    var len = Math.sqrt(dx*dx + dy*dy);
    if (len > SEGLEN) {
        var springF = SPRINGK * (len - SEGLEN);
        spring.X += (dx / len) * springF;
        spring.Y += (dy / len) * springF;
    }
}


function animate() {	
    // dots[0] follows the mouse,
    // though no dot is drawn there
    var start = 0;
    if (followmouse) {
        dots[0].X = Xpos;
        dots[0].Y = Ypos;	
        start = 1;
    }
    
    for (i = start ; i < nDots; i++ ) {
        
        var spring = new vec(0, 0);
        if (i > 0) {
            springForce(i-1, i, spring);
        }
        if (i < (nDots - 1)) {
            springForce(i+1, i, spring);
        }
        
        // air resisitance/friction
        var resist = new vec(-dots[i].dx * RESISTANCE,
            -dots[i].dy * RESISTANCE);
        
        // compute new accel, including gravity
        var accel = new vec((spring.X + resist.X)/MASS + XGRAVITY,
            (spring.Y + resist.Y)/ MASS + YGRAVITY);
        
        // compute new velocity
        dots[i].dx += (DELTAT * accel.X);
        dots[i].dy += (DELTAT * accel.Y);
        
        // stop dead so it doesn't jitter when nearly still
        if (Math.abs(dots[i].dx) < STOPVEL &&
            Math.abs(dots[i].dy) < STOPVEL &&
            Math.abs(accel.X) < STOPACC &&
            Math.abs(accel.Y) < STOPACC) {
            dots[i].dx = 0;
            dots[i].dy = 0;
        }
        
        // move to new position
        dots[i].X += dots[i].dx;
        dots[i].Y += dots[i].dy;
        
        // get size of window
        var height, width;
        if (isNetscape) {
            height = window.innerHeight + window.pageYOffset;
            width = window.innerWidth + window.pageXOffset;
        } else {	
            height = document.body.clientHeight + document.body.scrollTop;
            width = document.body.clientWidth + document.body.scrollLeft;
        }
        
        // bounce off 3 walls (leave ceiling open)
        if (dots[i].Y >=  height - DOTSIZE - 1) {
            if (dots[i].dy > 0) {
                dots[i].dy = BOUNCE * -dots[i].dy;
            }
            dots[i].Y = height - DOTSIZE - 1;
        }
        if (dots[i].X >= width - DOTSIZE) {
            if (dots[i].dx > 0) {
                dots[i].dx = BOUNCE * -dots[i].dx;
            }
            dots[i].X = width - DOTSIZE - 1;
        }
        if (dots[i].X < 0) {
            if (dots[i].dx < 0) {
                dots[i].dx = BOUNCE * -dots[i].dx;
            }
            dots[i].X = 0;
        }
        
        // move img to new position
        dots[i].obj.left = dots[i].X;			
        dots[i].obj.top =  dots[i].Y;		
    }
}

// end code hiding -->
</script>




<CENTER>
<table border=0> <tr><td>
<img src=logo1.gif hspace=10 align=left></td>
<td>
<center><img src=name.gif alt="The Fish House"><br clear=all><br>
<font size=5><b><i>Common Eating Fish<br> of the Florida Keys...</i></b></font><br>
</center>
</td></tr></table>

<TABLE BORDER=1 cellpadding=3 bgcolor=a8d0ff><TR><TD VALIGN="top"><center><font size=3>
<b>
<A HREF="index.html">Home</A> | 
<A HREF="fish.htm">Our Fish</A> | 
<A HREF="menu.htm">Our Menu</A> | 
<A HREF="index.html#market">Fish Market</A> | 
<A HREF="products.htm">Products</A>
</b></font></center></TD></TR>
<tr><td><center><img src=new.gif>
<b><a href="encore.htm"><i>The Fish House ENCORE</i></a>
</b></center></td></tr>
</TABLE>


</center>

<IMG SRC="lblue.jpg" width=100%>

<b>

<img src=grouper.gif align=left hspace=10 border=0 vspace=20>
<font size=4>BLACK GROUPER</font><br>
Olive or gray body covered with black blotches and brassy spots; of the sea bass group. Found offshore on rocky bottoms, reefs, and by drop off walls in water over 60 ft deep. Commonly as large as 40 lbs., may be as large as 100 lbs. Feeds on fish and squid.
<br clear=all>
<hr>
<img src=dolphin.gif align=left hspace=10 border=0 vspace=20>
<font size=4>DOLPHIN (MAHI-MAHI  or DORADO)</font><br>
Bright greenish blue above, yellow on sides. Flashes neon bright purple under stress. Body tapers sharply from head to tail. Found offshore in warm waters and commonly reaches 30 lbs. Very fast growing and lacking scales, swims at speeds to 50 knots. It feeds on flying fish and squid.
<br clear=all>
<hr>
<img src=swordfsh.gif align=left hspace=10 border=0 vspace=20>
<font size=4>SWORDFISH</font><br>
Color of back variable - black grayish blue, brown, grayish-purple, or bronze; sides dusky: underbelly dirty white. Long. flat, sword-like upper jaw; lacks scales, teeth, and pelvic fin. Found offshore, worldwide in temperate waters and grows to as much as 200 lbs., feeding on squid, octopus and pelagic fishes of all kinds.
<br clear=all>
<hr>
<img src=cobia.gif align=left hspace=10 border=0 vspace=10>
<font size=4>COBIA </font><br>
Long slim fish with broad, depressed head: projected lower jaw and dark lateral stripe. Found inshore and near shore in inlets and bays, near structures like pilings and wrecks. Feeds on crabs, squid, and small fish.
<br clear=all>
<hr>
<img src=tuna.gif align=left hspace=10 border=0 vspace=5>
<font size=4>TUNA</font><br>
Back silvery gray to dark at top. Muscular body with thin fins. Found offshore. common to 20 lbs. Schools from the summer in the north to winter in south Florida. Feeds on fish and squid.
<br clear=all>
<hr>
<img src=snapper.gif align=left hspace=10 border=0 vspace=20>
<font size=4>YELLOWTAIL SNAPPER</font><br>
Back and upper sides olive to blue with yellow spots; lower sides and belly with alternating longitudinal pink and yellow stripes. Midlateral yellow stripe from mouth to tail. Found off shore or near shore on grass beds, back reefs, and sandy areas. Commonly 3-5 lbs, feeding on small fish and invertebrates.
<br clear=all>

<center><IMG SRC="lblue.jpg" width=100%>
<Font size=+2>
<A HREF="index.html">Return</A>
</font>
<hr>
<font size=1><i>HTML production and Copyright &copy; 2003, 
<a href="mailto:keystech@pennekamp.com">Keys Technologies</a>.
All rights reserved.<br></i> </font></CENTER>

<EMBED SRC="mermaid.mid" HEIGHT=25 WIDTH=50 AUTOSTART=TRUE HIDDEN=TRUE loop=true>
</tr></td></table></center>
</BODY></HTML>

